{"searchDocs":[{"title":"Identification","type":0,"sectionRef":"#","url":"/Omega/api/Identification","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"Identification","url":"/Omega/api/Identification#properties","content":" ","version":null,"tagName":"h2"},{"title":"Registered​","type":1,"pageTitle":"Identification","url":"/Omega/api/Identification#Registered","content":"&lt;/&gt; Identification.Registered: {any} The registered objects in Identification ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Identification","url":"/Omega/api/Identification#functions","content":" ","version":null,"tagName":"h2"},{"title":"Register​","type":1,"pageTitle":"Identification","url":"/Omega/api/Identification#Register","content":"&lt;/&gt; Identification.Register( self: Identification, Value: any ) → any Registers an object to the module  ","version":null,"tagName":"h3"},{"title":"Get​","type":1,"pageTitle":"Identification","url":"/Omega/api/Identification#Get","content":"&lt;/&gt; Identification.Get( self: Identification, ID: number ) → any Gets an object based on the ID returned from :Register() ","version":null,"tagName":"h3"},{"title":"NPCConfiguration","type":0,"sectionRef":"#","url":"/Omega/api/NPCConfiguration","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"NPCConfiguration","url":"/Omega/api/NPCConfiguration#properties","content":" ","version":null,"tagName":"h2"},{"title":"CharacterStateMachine​","type":1,"pageTitle":"NPCConfiguration","url":"/Omega/api/NPCConfiguration#CharacterStateMachine","content":"&lt;/&gt; NPCConfiguration.CharacterStateMachine: ((self:NPC) → nil)? The character state machine to set the humanoid logic of the NPC Optional, as a default state machine is provided  ","version":null,"tagName":"h3"},{"title":"Functionality​","type":1,"pageTitle":"NPCConfiguration","url":"/Omega/api/NPCConfiguration#Functionality","content":"&lt;/&gt; NPCConfiguration.Functionality: (self:NPC) → nil The AI functionality of the NPC  ","version":null,"tagName":"h3"},{"title":"Attributes​","type":1,"pageTitle":"NPCConfiguration","url":"/Omega/api/NPCConfiguration#Attributes","content":"&lt;/&gt; NPCConfiguration.Attributes: {} The attributes, or the properties of the NPC. These are the defaults. ","version":null,"tagName":"h3"},{"title":"Omega","type":0,"sectionRef":"#","url":"/Omega/api/Omega","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"Omega","url":"/Omega/api/Omega#properties","content":" ","version":null,"tagName":"h2"},{"title":"ConfigurationFolder​","type":1,"pageTitle":"Omega","url":"/Omega/api/Omega#ConfigurationFolder","content":"&lt;/&gt; Omega.ConfigurationFolder: Configuration  The configuration folder assosiated with Omega  ","version":null,"tagName":"h3"},{"title":"ModelFolder​","type":1,"pageTitle":"Omega","url":"/Omega/api/Omega#ModelFolder","content":"&lt;/&gt; Omega.ModelFolder: Folder  The model folder assosiated with Omega  ","version":null,"tagName":"h3"},{"title":"Entities​","type":1,"pageTitle":"Omega","url":"/Omega/api/Omega#Entities","content":"&lt;/&gt; Omega.Entities: {NPC} List of NPCs loaded  ","version":null,"tagName":"h3"},{"title":"Identification​","type":1,"pageTitle":"Omega","url":"/Omega/api/Omega#Identification","content":"&lt;/&gt; Omega.Identification: Identification The identification (hashing) module  ","version":null,"tagName":"h3"},{"title":"EntityFolder​","type":1,"pageTitle":"Omega","url":"/Omega/api/Omega#EntityFolder","content":"&lt;/&gt; Omega.EntityFolder: Folder  The folder containing all the entities ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Omega","url":"/Omega/api/Omega#functions","content":" ","version":null,"tagName":"h2"},{"title":"RegisterModelFolder​","type":1,"pageTitle":"Omega","url":"/Omega/api/Omega#RegisterModelFolder","content":"&lt;/&gt; Omega.RegisterModelFolder( self: Omega, Folder: Folder ) → () Sets the model folder to the provided folder  ","version":null,"tagName":"h3"},{"title":"RegisterConfigurationFolder​","type":1,"pageTitle":"Omega","url":"/Omega/api/Omega#RegisterConfigurationFolder","content":"&lt;/&gt; Omega.RegisterConfigurationFolder( self: Omega, Configuration: Configuration ) → () Sets the configuration folder to the provided  ","version":null,"tagName":"h3"},{"title":"NPC​","type":1,"pageTitle":"Omega","url":"/Omega/api/Omega#NPC","content":"&lt;/&gt; Omega.NPC( self: Omega, Name: string, SpawnCFrame: CFrame? ) → NPC Creates an NPC ","version":null,"tagName":"h3"},{"title":"StateConfiguration","type":0,"sectionRef":"#","url":"/Omega/api/StateConfiguration","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"StateConfiguration","url":"/Omega/api/StateConfiguration#properties","content":" ","version":null,"tagName":"h2"},{"title":"Priority​","type":1,"pageTitle":"StateConfiguration","url":"/Omega/api/StateConfiguration#Priority","content":"&lt;/&gt; StateConfiguration.Priority: number The priority of the state  ","version":null,"tagName":"h3"},{"title":"StateConditionFunction​","type":1,"pageTitle":"StateConfiguration","url":"/Omega/api/StateConfiguration#StateConditionFunction","content":"&lt;/&gt; StateConfiguration.StateConditionFunction: () → nil The state condition function ","version":null,"tagName":"h3"},{"title":"State","type":0,"sectionRef":"#","url":"/Omega/api/State","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"State","url":"/Omega/api/State#properties","content":" ","version":null,"tagName":"h2"},{"title":"Priority​","type":1,"pageTitle":"State","url":"/Omega/api/State#Priority","content":"&lt;/&gt; State.Priority: number The priority index of the state  ","version":null,"tagName":"h3"},{"title":"StateConditionFunction​","type":1,"pageTitle":"State","url":"/Omega/api/State#StateConditionFunction","content":"&lt;/&gt; State.StateConditionFunction: () → boolean The function that is used to figure out if the State is active  ","version":null,"tagName":"h3"},{"title":"NPC​","type":1,"pageTitle":"State","url":"/Omega/api/State#NPC","content":"&lt;/&gt; State.NPC: NPC The npc associated with the state  ","version":null,"tagName":"h3"},{"title":"Active​","type":1,"pageTitle":"State","url":"/Omega/api/State#Active","content":"&lt;/&gt; State.Active: boolean Determines whether the State is active or not ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"State","url":"/Omega/api/State#functions","content":" ","version":null,"tagName":"h2"},{"title":"Update​","type":1,"pageTitle":"State","url":"/Omega/api/State#Update","content":"&lt;/&gt; State.Update(self: State) → () Updates the state by checking the state condition function, and sets the active property ","version":null,"tagName":"h3"},{"title":"NPC","type":0,"sectionRef":"#","url":"/Omega/api/NPC","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#properties","content":" ","version":null,"tagName":"h2"},{"title":"RootModel​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#RootModel","content":"&lt;/&gt; NPC.RootModel: Model  The model that the npc is loaded on Basically the npc in the game world NOTE THAT ON THE SERVER THE RENDER MODEL WILL NOT EXIST  ","version":null,"tagName":"h3"},{"title":"RootPart​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#RootPart","content":"&lt;/&gt; NPC.RootPart: BasePart  The npc's root part  ","version":null,"tagName":"h3"},{"title":"ControllerManager​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#ControllerManager","content":"&lt;/&gt; NPC.ControllerManager: ControllerManager  the NPC's controller manager, which is basically the Humanoid  ","version":null,"tagName":"h3"},{"title":"GroundSensor​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#GroundSensor","content":"&lt;/&gt; NPC.GroundSensor: ControllerPartSensor  The NPC's ground sensor, which is used to detect the floor of the NPC  ","version":null,"tagName":"h3"},{"title":"LadderSensor​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#LadderSensor","content":"&lt;/&gt; NPC.LadderSensor: ControllerPartSensor  The NPC's ladder sensor, which is used to detect the truss the NPC is climbing on  ","version":null,"tagName":"h3"},{"title":"GroundController​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#GroundController","content":"&lt;/&gt; NPC.GroundController: GroundController  The NPC's ground controller, which is used to handle ground movement  ","version":null,"tagName":"h3"},{"title":"ClimbController​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#ClimbController","content":"&lt;/&gt; NPC.ClimbController: ClimbController  The NPC's climb controller, which is used to handle climbing  ","version":null,"tagName":"h3"},{"title":"AirController​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#AirController","content":"&lt;/&gt; NPC.AirController: AirController  The NPC's air controller, which is used to handle air movement  ","version":null,"tagName":"h3"},{"title":"SwimController​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#SwimController","content":"&lt;/&gt; NPC.SwimController: SwimController  The NPC's swim controller, which is used to handle swim movement  ","version":null,"tagName":"h3"},{"title":"Configuration​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#Configuration","content":"&lt;/&gt; NPC.Configuration: NPCConfiguration The configuration file of the NPC  ","version":null,"tagName":"h3"},{"title":"ConfigurationModule​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#ConfigurationModule","content":"&lt;/&gt; NPC.ConfigurationModule: ModuleScript  The configuration Module Script that is used to get Configuration  ","version":null,"tagName":"h3"},{"title":"State​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#State","content":"&lt;/&gt; NPC.State: State The current state of the NPC  ","version":null,"tagName":"h3"},{"title":"MoveDirection​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#MoveDirection","content":"&lt;/&gt; NPC.MoveDirection: Vector3  The move direction of the NPC Only used if state machine is not overridden  ","version":null,"tagName":"h3"},{"title":"LoadedStates​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#LoadedStates","content":"&lt;/&gt; NPC.LoadedStates: {State} The states that are loaded  ","version":null,"tagName":"h3"},{"title":"ID​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#ID","content":"&lt;/&gt; NPC.ID: number The ID of the NPC ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#functions","content":" ","version":null,"tagName":"h2"},{"title":"Destroy​","type":1,"pageTitle":"NPC","url":"/Omega/api/NPC#Destroy","content":"&lt;/&gt; NPC.Destroy(self: NPC) → () Destroys the selected NPC, and clears the cache ","version":null,"tagName":"h3"}],"options":{"id":"default"}}